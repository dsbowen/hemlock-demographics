{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hemlock-Demographics Hemlock-Demographics is a hemlock extension which allows you to add demographics items to a hemlock project. Installation With hemlock-CLI (recommended): $ hlk install hemlock-demographics With pip: $ pip install hemlock-demographics Quickstart from hemlock import Branch, Page, Label, route from hemlock_demographics import comprehensive_demographics @route('/survey') def start(): return Branch( comprehensive_demographics(page=True), Page( Label('<p>The end.</p>'), terminal=True ) ) Citation Hemlock-Demographics is based largely on the demographics section of the World Values Survey . @software{bowen2020hemlock-demographics, author = {Dillon Bowen}, title = {Hemlock-Demographics}, url = {https://dsbowen.github.io/hemlock-demographics/}, date = {2020-10-05}, } @dataset{inglehart2014wvs, author = {Inglehart, R., and C. Haerpfer, and A. Moreno, and C. Welzel, and K. Kizilova, and J. Diez-Medrano, and M. Lagos, and P. Norris, and E. Ponarin and B. Puranen and et al.}, title={World Values Survey: Round Six}, url = {http://www.worldvaluessurvey.org/}, date = {2014.} } License Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"Home"},{"location":"#hemlock-demographics","text":"Hemlock-Demographics is a hemlock extension which allows you to add demographics items to a hemlock project.","title":"Hemlock-Demographics"},{"location":"#installation","text":"With hemlock-CLI (recommended): $ hlk install hemlock-demographics With pip: $ pip install hemlock-demographics","title":"Installation"},{"location":"#quickstart","text":"from hemlock import Branch, Page, Label, route from hemlock_demographics import comprehensive_demographics @route('/survey') def start(): return Branch( comprehensive_demographics(page=True), Page( Label('<p>The end.</p>'), terminal=True ) )","title":"Quickstart"},{"location":"#citation","text":"Hemlock-Demographics is based largely on the demographics section of the World Values Survey . @software{bowen2020hemlock-demographics, author = {Dillon Bowen}, title = {Hemlock-Demographics}, url = {https://dsbowen.github.io/hemlock-demographics/}, date = {2020-10-05}, } @dataset{inglehart2014wvs, author = {Inglehart, R., and C. Haerpfer, and A. Moreno, and C. Welzel, and K. Kizilova, and J. Diez-Medrano, and M. Lagos, and P. Norris, and E. Ponarin and B. Puranen and et al.}, title={World Values Survey: Round Six}, url = {http://www.worldvaluessurvey.org/}, date = {2014.} }","title":"Citation"},{"location":"#license","text":"Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"License"},{"location":"api/","text":"a.src-href { float: right; } p.attr { margin-top: 0.5em; margin-left: 1em; } p.func-header { background-color: gainsboro; border-radius: 0.1em; padding: 0.5em; padding-left: 1em; } table.field-table { border-radius: 0.1em } Demographics hemlock_demographics. demographics def hemlock_demographics. demographics ( *items, page=False, require=False, record_index=False ) [source] Parameters: *items : str Names of demographic items to return. See the full list of available items . page : bool, default=False Indicates that a page should be returned containing the demographics items. If False , a list of questions is returned. require : bool, default=False Indicates that participants are required to respond to the items. record_index : bool, default=False Indicates that the dataframe should record the order in which the demographic items appear on the page. Returns: demographics : hemlock.Page or list of hemlock.Question A page containing the requested demographics items if page , otherwise a list of demographics questions. Examples from hemlock import push_app_context from hemlock_demographics import demographics app = push_app_context() demographics('age', 'gender', 'race', page=True).preview() hemlock_demographics. comprehensive_demographics def hemlock_demographics. comprehensive_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: demographics : A comprehensive demographics questionnaire including basic demographics, family demographics, country demographics, and SES demographics. hemlock_demographics. basic_demographics def hemlock_demographics. basic_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: basic demographics : Gender, age, race, and religion. hemlock_demographics. family_demographics def hemlock_demographics. family_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: family demographics : Number of household residents, number of children, living with parents or in-laws, marital status. hemlock_demographics. country_demographics def hemlock_demographics. country_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: country demographics : Country of residence, origin, citizenship, and household language. hemlock_demographics. status_demographics def hemlock_demographics. status_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: SES demographics : Education, employment, occupation, work sector, savings, subjective social class and income group. hemlock_demographics. register def hemlock_demographics. register ( key=None ) [source] Register a demographics item. Parameters: key : str or None, default=None String key for the item. If None , the name of the function is used. Examples @register() def gender(require=False): gender = Check( '<p>What is your gender?</p>', ['Male', 'Female', 'Other'], var='Gender' )","title":"API"},{"location":"api/#demographics","text":"","title":"Demographics"},{"location":"api/#hemlock_demographicsdemographics","text":"def hemlock_demographics. demographics ( *items, page=False, require=False, record_index=False ) [source] Parameters: *items : str Names of demographic items to return. See the full list of available items . page : bool, default=False Indicates that a page should be returned containing the demographics items. If False , a list of questions is returned. require : bool, default=False Indicates that participants are required to respond to the items. record_index : bool, default=False Indicates that the dataframe should record the order in which the demographic items appear on the page. Returns: demographics : hemlock.Page or list of hemlock.Question A page containing the requested demographics items if page , otherwise a list of demographics questions.","title":"hemlock_demographics.demographics"},{"location":"api/#examples","text":"from hemlock import push_app_context from hemlock_demographics import demographics app = push_app_context() demographics('age', 'gender', 'race', page=True).preview()","title":"Examples"},{"location":"api/#hemlock_demographicscomprehensive_demographics","text":"def hemlock_demographics. comprehensive_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: demographics : A comprehensive demographics questionnaire including basic demographics, family demographics, country demographics, and SES demographics.","title":"hemlock_demographics.comprehensive_demographics"},{"location":"api/#hemlock_demographicsbasic_demographics","text":"def hemlock_demographics. basic_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: basic demographics : Gender, age, race, and religion.","title":"hemlock_demographics.basic_demographics"},{"location":"api/#hemlock_demographicsfamily_demographics","text":"def hemlock_demographics. family_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: family demographics : Number of household residents, number of children, living with parents or in-laws, marital status.","title":"hemlock_demographics.family_demographics"},{"location":"api/#hemlock_demographicscountry_demographics","text":"def hemlock_demographics. country_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: country demographics : Country of residence, origin, citizenship, and household language.","title":"hemlock_demographics.country_demographics"},{"location":"api/#hemlock_demographicsstatus_demographics","text":"def hemlock_demographics. status_demographics ( **kwargs ) [source] Parameters: **kwargs : Keyword arguments are passed to demographics . Returns: SES demographics : Education, employment, occupation, work sector, savings, subjective social class and income group.","title":"hemlock_demographics.status_demographics"},{"location":"api/#hemlock_demographicsregister","text":"def hemlock_demographics. register ( key=None ) [source] Register a demographics item. Parameters: key : str or None, default=None String key for the item. If None , the name of the function is used.","title":"hemlock_demographics.register"},{"location":"api/#examples_1","text":"@register() def gender(require=False): gender = Check( '<p>What is your gender?</p>', ['Male', 'Female', 'Other'], var='Gender' )","title":"Examples"},{"location":"items/","text":"Items gender age age_bins race religion household_residents children live_with_parents marital_status country language education employment occupation sector primary_wage_earner save_money social_class income_group","title":"Items"},{"location":"items/#items","text":"gender age age_bins race religion household_residents children live_with_parents marital_status country language education employment occupation sector primary_wage_earner save_money social_class income_group","title":"Items"}]}